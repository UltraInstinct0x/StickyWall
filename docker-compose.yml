version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/digital_wall
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGINS=http://localhost:3000
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - CLOUDFLARE_R2_ACCESS_KEY_ID=${CLOUDFLARE_R2_ACCESS_KEY_ID}
      - CLOUDFLARE_R2_SECRET_ACCESS_KEY=${CLOUDFLARE_R2_SECRET_ACCESS_KEY}
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=https://298f4d1406ef.ngrok-free.app
      - BACKEND_URL=http://backend:8000
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    command: npm run dev

  # Celery Worker - Background Processing
  celery-worker:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/digital_wall
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - CLOUDFLARE_R2_ACCESS_KEY_ID=${CLOUDFLARE_R2_ACCESS_KEY_ID}
      - CLOUDFLARE_R2_SECRET_ACCESS_KEY=${CLOUDFLARE_R2_SECRET_ACCESS_KEY}
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    command: celery -A app.services.background_processor:celery_app worker --loglevel=info --concurrency=2

  # Celery Beat - Scheduled Tasks
  celery-beat:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/digital_wall
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
    command: celery -A app.services.background_processor:celery_app beat --loglevel=info

  # Flower - Celery Monitoring
  flower:
    build: ./backend
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - redis
    volumes:
      - ./backend:/app
    command: celery -A app.services.background_processor:celery_app flower --port=5555

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=digital_wall
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

volumes:
  postgres_data:
  redis_data:
  backend_data: